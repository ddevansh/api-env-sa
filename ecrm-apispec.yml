---
openapi: 3.0.2
info:
  title: eCRM API Specification
  version: "1.0"
  description: Enterprise CRM (eCRM) - Webservice API specification
  contact:
    name: DEW Business Information Systems Unit - SI&T Branch
    email: DLDEWInformationBranchOnlineServices@sa.gov.au
  license:
    name: Creative Commons Attribution 4.0 Licence
    url: https://creativecommons.org/licenses/by/4.0/
servers:
- url: https://{domain}.ecrm.env.sa.gov.au
  description: API Server
  variables:
    domain:
      default: qa
      description: QA server domain
paths:
  /apis/v1/businesses:
    summary: Business establishment details end-point
    description: Resource URI for interacting with registered Business establishments
      in the eCRM System
    get:
      tags:
      - crm-apis
      parameters:
      - name: businessNameContains
        description: Filter reprsenting a value to string match with `businessName`
        schema:
          type: string
        in: query
        required: false
      - name: limit
        description: Maximum number of results in the response
        schema:
          type: integer
        in: query
        required: false
      - name: offset
        description: Pagination index
        schema:
          type: integer
        in: query
        required: false
      - name: abnNumber
        description: |-
          ABN Number of the Business establishment.

          The ABN Number should be of the format `nnnnnnnnnnn`. For eg: '36702093234'
        schema:
          type: string
        in: query
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business-page'
          description: Successful operation
        "400":
          description: "Bad request - Atleast one of the following query parameters\
            \ required : \n\n`businessNameContains`, or `abnNumber`"
        "401":
          description: Unauthorized
      operationId: GetBusinesses
      summary: List all  Businesses registered in the system
      description: "Paginated list of all Businesses registered in the CMIS system.\n\
        \nNote: Atleast one of the following query parameters required for this end-point\
        \ : \n\n`businessNameContains`, or `abnNumber`"
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/business'
        required: true
      tags:
      - crm-apis
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/business'
          description: Successful operation
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: CreateBusiness
      summary: Create a new `business` establishment
      description: Create a new `business` entity in the CMIS System
  /apis/v1/clients:
    summary: End-point used to manage the list of client
    description: The REST endpoint/path used to list zero or more `client` entities
    get:
      tags:
      - crm-apis
      parameters:
      - name: limit
        description: Maximum number of results in the response
        schema:
          type: integer
        in: query
        required: false
      - name: offset
        description: Pagination index
        schema:
          type: integer
        in: query
        required: false
      - name: firstNameContains
        description: Client `First name` contains
        schema:
          type: string
        in: query
      - name: lastNameContains
        description: Client `Last name` contains
        schema:
          type: string
        in: query
      - name: postCode
        description: |-
          `postCode` filter for searching `client`s

          Both the Residential and Postal (if different) addresses are checked for the supplied `postCode`
        schema:
          type: integer
        in: query
      - name: clientId
        description: Unique Client ID
        schema:
          type: string
        in: query
      - name: emailAddress
        description: Email address of the client
        schema:
          type: string
        in: query
      - name: subjectID
        description: |-
          Unique ID provided by the OIDC conformant Auth Server.

          This is the `sub` value of the OIDC ID Token as described in
          https://openid.net/specs/openid-connect-core-1_0.html#IDToken
        schema:
          type: string
        in: query
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-page'
          description: Single page of `client` records
        "400":
          description: "Bad request - Atleast one of the following query parameters\
            \ required : \n\n`firstNameContains`, \n`lastNameContains`, or\n`postCode`"
        "401":
          description: Unauthorized
      operationId: GetClients
      summary: List all Clients registered in the system
      description: Get `client` records that match the requested filters
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client'
        required: true
      tags:
      - crm-apis
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
          description: Successful operation
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      operationId: CreateClient
      summary: Create a new `client`
      description: Create a new Client in the CMIS System
  /apis/v1/token:
    summary: Authentication and Authorization
    description: Authentication and authorization end points
    post:
      tags:
      - auth-apis
      parameters:
      - examples:
          WWW-Authenticate:
            value: QWxhZGRpbjpPcGVuU2VzYW1l
        name: WWW-Authenticate
        description: username:password Base64-encoded
        schema:
          type: string
        in: header
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: User authorized - Token generated
        "401":
          description: Unauthorized
      security:
      - {}
      operationId: GetToken()
      summary: Generate bearer token
      description: Request to generate and return a bearer token.
components:
  schemas:
    client:
      title: Root Datatype - client
      description: "Generic representation of a client (individual). \nThe client\
        \ could play different roles in different situatations."
      required:
      - firstname
      - lastname
      - residentialAddress
      - mobilePhone
      type: object
      properties:
        firstname:
          description: First name of the client
          type: string
        middlename:
          description: Middle name of the client
          type: string
        lastname:
          description: Last name of the client
          type: string
        residentialAddress:
          $ref: '#/components/schemas/address'
          description: Residential Address
        postalAddress:
          $ref: '#/components/schemas/address'
          description: "Postal Address. \n`Note:` When Postal address is not present,\
            \ it is considered to be same as Residential address."
        emailaddress:
          description: Email address
          type: string
        mobilePhone:
          description: 'Contact number: Mobile Phone'
          type: string
        workPhone:
          description: 'Contact number: Work Phone'
          type: string
        dateofbirth:
          format: date
          description: Date of Birth
          type: string
        occupation:
          description: Client Occupation
          type: string
        clientId:
          description: Unique (system generate) identifier for the client
          type: string
        subjectId:
          description: |-
            Unique ID provided by the OIDC conformant Auth Server.

            This would be the `sub` value of the OIDC ID Token as described in
            https://openid.net/specs/openid-connect-core-1_0.html#IDToken
          type: string
    locationdetail:
      title: Nested Datatype - locationdetail
      description: Location details of a case
      required:
      - address
      type: object
      properties:
        address:
          $ref: '#/components/schemas/address'
          description: Address of the location
        northing:
          description: Northing (geographic cartesian coordinate).
          type: string
        easting:
          description: Easting (geographic cartesian coordinate).
          type: string
        zone:
          description: Coordinate system Zone
          type: string
        shortDescription:
          description: Short description of the location
          type: string
        detailDescription:
          description: Detailed description of the location
          type: string
      example:
        address:
          streetLine1: 81-95 Wamyouth Ave
          suburb: ADELAIDE
          postcode: 5000
          state: SA
          country: AU
        northing: "6379468"
        easting: "270398"
        zone: "54"
    business-page:
      title: Page - business Datatype
      description: "A page of `business` resources. \n\nThe `nextPage` and `prevPage`\
        \ urls are optional and will be present only when more matching results exists\
        \ beyond this collection of data."
      required:
      - businesses
      - totalRecords
      - pageSize
      - pageNumber
      type: object
      properties:
        businesses:
          description: A collection of `business` resources
          type: array
          items:
            $ref: '#/components/schemas/business'
        nextPage:
          description: URI to next page of the collection
          type: string
        prevPage:
          description: URI to previous page of the collection
          type: string
        totalRecords:
          description: Indicates the total number of records (including all pages)
          type: integer
        pageSize:
          description: Number of records displayed per page
          type: integer
        pageNumber:
          description: Index (1-based) respresenting current page number
          type: integer
    client-page:
      title: Page - client Datatype
      description: |-
        A page of `client` resources.

        The `nextPage` and `prevPage` urls are optional and will be present only when more matching results exists beyond this collection of data.
      required:
      - clients
      - pageNumber
      - pageSize
      - totalRecords
      type: object
      properties:
        clients:
          description: Collection of `client` resources
          type: array
          items:
            $ref: '#/components/schemas/client'
        nextPage:
          description: URI to next page of the collection
          type: string
        prevPage:
          description: URI to previous page of the collection
          type: string
        totalRecords:
          description: Indicates the total number of records (including all pages)
          type: integer
        pageSize:
          description: Number of records displayed per page
          type: integer
        pageNumber:
          description: Index (1-based) respresenting current page number
          type: integer
    business:
      title: Root Datatype - business
      description: Details of a Business establishment
      required:
      - businessName
      - businessAddress
      type: object
      properties:
        businessName:
          description: Registered name of the Business establishment
          type: string
        businessId:
          description: Unique (system generated) identified for the Business establishment
          type: string
        description:
          description: Description of the Business establishment
          type: string
        abnNumber:
          description: Registered ABN of the Business establishment
          type: string
        businessAddress:
          $ref: '#/components/schemas/address'
          description: Registered address of the Business establishment
        contactNumber:
          description: Registered contact number of the Business establishment
          type: string
        website:
          description: Registered website of the Business establishment
          type: string
        primaryContact:
          $ref: '#/components/schemas/client'
          description: Primary contact for the Business establishment
      example:
        businessId: da801abe-91a7-e911-a2cc-005056a719a3
        businessName: Dr. Dolittle Inc
        contactNumber: "0123456789"
        website: http://www.webaddress.com
        abnNumber: "11000111000"
        allegedCasesCount: 41
        convictedCasesCount: 35
        businessAddress:
          streetLine1: 81-95 WAMYOUTH STREET
          suburb: ADELAIDE
          postcode: 5000
          state: VIC
          country: AU
        primaryContact:
          firstname: Joe
          middlename: Blogger
          lastname: Bloggs
          residentialAddress:
            streetLine1: 81-95 Wamyouth Ave
            suburb: ADELAIDE
            postcode: 5000
            state: SA
            country: AU
          driversLicenseDetails:
            licenseNumber: XX1000
            licenseState: SA
            licenseExpiry: 2022-10-10
          emailaddress: joe.bloggs@blooger.com
          mobilePhone: "0123456789"
          workPhone: 987-654-3210
          dateofbirth: 1960-01-17
          occupation: Serial Blogger
          clientId: some text
          whsRisks:
          - whsSafetyRiskCategory: Aggressive dog(s)
            description: Couple of dogs usually not on leash
          - whsSafetyRiskCategory: Possesses firearms
            description: In possession, claims to be never loaded
          allegedCasesCount: 47
          convictedCasesCount: 22
    address:
      title: Nested Datatype - address
      description: Represents an address data
      required:
      - country
      - postcode
      - streetLine1
      - suburb
      type: object
      properties:
        streetLine1:
          description: Street address - line one
          type: string
        streetLine2:
          description: Street address - cont.
          type: string
        suburb:
          description: Suburb or town of the address
          type: string
        postcode:
          description: Postcode of the address
          type: string
        state:
          description: State / District of the address
          enum:
          - NSW
          - QLD
          - VIC
          - SA
          - WA
          - NT
          - TAS
          - ACT
          - Other
          type: string
        country:
          description: ISO 3166-1 alpha-2 country code of the address
          pattern: ^[A-Z]{2}$
          type: string
      example:
        streetLine1: 81-95 Wamyouth Ave
        suburb: ADELAIDE
        postcode: 5000
        state: SA
        country: AU
  securitySchemes:
    Bearer:
      scheme: bearer
      type: http
      description: JWT Bearer Token
security:
- Bearer: []
tags:
- name: crm-apis
  description: CRM APIs
- name: auth-apis
  description: Authentication APIs
